{
  "name": "gulp-express",
  "version": "0.1.13",
  "description": "gulp plugin for express, connect",
  "homepage": "https://github.com/gimm/gulp-express",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "keywords": [
    "gulp",
    "express",
    "livereload",
    "server"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/gimm/gulp-express"
  },
  "author": {
    "name": "yucc2008@gmail.com"
  },
  "license": "WTFPL",
  "dependencies": {
    "debug": "^2.1.1",
    "deepmerge": "~0.2.7",
    "event-stream": "~3.2.1",
    "tiny-lr": "0.0.9"
  },
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gimm/gulp-express/issues"
  },
  "dist": {
    "shasum": "e746e13bd320e2940c50c72165bd6325f23e78dd"
  },
  "devDependencies": {},
  "readme": "# gulp-express\r\n\r\n[![Livereload downloads][3]][4] [![MIT Licensed][5]](http://www.wtfpl.net/)\r\n\r\n[3]: http://img.shields.io/npm/dm/gulp-express.svg\r\n[4]: https://www.npmjs.com/package/gulp-express\r\n\r\n[5]: http://img.shields.io/badge/license-WTFPL-blue.svg\r\n\r\nA simple gulp plugin which:\r\n * use [`ChildProcess.spawn`](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options) to start a node process;\r\n * use [`tiny-lr`](https://github.com/mklabs/tiny-lr) provide livereload ability;\r\n\r\n## Update notice\r\n* v0.1.12\r\n\r\n    > `options.lr` is used for creating tiny-lr server.  `options` here is the first second parameter for [server.run](#serverrunargsoptions).\r\n\r\n* v0.1.7\r\n    > change signature for [server.run](#serverrunargsoptions), split `options`  into `args` and `options`.\r\n\r\n* v0.1.5\r\n    > pipe support added for [server.notify](#servernotifyevent)\r\n\r\n## Install\r\n```bash\r\n$ npm install --save-dev gulp-express\r\n```\r\n\r\n## API\r\n\r\n### server.run([args][,options])\r\nRun or re-run the script file, which will create a server.\r\nUse the same arguments with [ChildProcess.spawn](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options) with 'node' as command.\r\n\r\n\r\n* `args` - `Array` - Array List of string arguments. The default value is `['app.js']`.\r\n* `options` - `Object` - The third parameter for [ChildProcess.spawn](http://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options), the default value is:\r\n```js\r\noptions = {\r\n    cwd: undefined,\r\n    lr: {//lr will be used for tiny-lr server construction\r\n        port: 35729\r\n    }\r\n}\r\noptions.env = process.env;\r\noptions.env.NODE_ENV = 'development';\r\n```\r\n* Returns a [ChildProcess](http://nodejs.org/api/child_process.html#child_process_class_childprocess) instance of spawned server.\r\n\r\n### server.stop()\r\nStop the instantiated spawned server programmatically, and the tiny-lr server.\r\n\r\n### server.notify([event])\r\nSend a notification to the tiny-lr server in order to trigger a reload on page.\r\npipe support is added after v0.1.5, so you can also do this:\r\n```js\r\ngulp.src('css/*.css')\r\n// â€¦\r\n.pipe(gulp.dest('public/css/'))\r\n.pipe(server.notify())\r\n```\r\n* `event` (required when server.notify is invoked without pipe) - `Object` - Event object that is normally passed to [gulp.watch](https://github.com/gulpjs/gulp/blob/master/docs/API.md#cbevent) callback.\r\nShould contain `path` property with changed file path.\r\n\r\n## Usage\r\n\r\n```js\r\n// gulpfile.js\r\nvar gulp = require('gulp');\r\nvar server = require('gulp-express');\r\n\r\ngulp.task('server', function () {\r\n    // Start the server at the beginning of the task\r\n    server.run(['app.js']);\r\n\r\n    // Restart the server when file changes\r\n    gulp.watch(['app/**/*.html'], server.notify);\r\n    gulp.watch(['app/styles/**/*.scss'], ['styles:scss']);\r\n    //gulp.watch(['{.tmp,app}/styles/**/*.css'], ['styles:css', server.notify]);\r\n    //Event object won't pass down to gulp.watch's callback if there's more than one of them.\r\n    //So the correct way to use server.notify is as following:\r\n    gulp.watch(['{.tmp,app}/styles/**/*.css'], function(event){\r\n        gulp.run('styles:css');\r\n        server.notify(event);\r\n        //pipe support is added for server.notify since v0.1.5,\r\n        //see https://github.com/gimm/gulp-express#servernotifyevent\r\n    });\r\n\r\n    gulp.watch(['app/scripts/**/*.js'], ['jshint']);\r\n    gulp.watch(['app/images/**/*'], server.notify);\r\n    gulp.watch(['app.js', 'routes/**/*.js'], [server.run]);\r\n});\r\n```\r\n```js\r\n// app.js\r\nvar express = require('express');\r\nvar app = module.exports.app = exports.app = express();\r\n\r\n//you won't need 'connect-livereload' if you have livereload plugin for your browser\r\napp.use(require('connect-livereload')());\r\n```\r\n",
  "_id": "gulp-express@0.1.13",
  "_shasum": "6f3fb2626dfbb3579eb321ea434ca35189930fb8",
  "_from": "gulp-express@",
  "_resolved": "https://registry.npmjs.org/gulp-express/-/gulp-express-0.1.13.tgz"
}
